name: CI/CD - Cosmic News Deployment

on:
  push:
    branches:
      - main
      - fase3
    paths-ignore:
      - README.md

permissions:
  id-token: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: rootpass 
          MYSQL_DATABASE: cosmic_news_bd  
        options: --health-cmd="mysqladmin ping --silent" --health-start-period=30s

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run tests in cosmic-news directory
        run: mvn -f cosmic-news/pom.xml test

  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Generate Docker image
        run: |
          mvn -f cosmic-news/pom.xml spring-boot:build-image -DskipTests \
            -Dspring-boot.build-image.imageName=${{ secrets.DOCKERHUB_USERNAME }}/cosmic-news:v1

      - name: Login to DockerHub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login \
          -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/cosmic-news:v1

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    steps:
      - name: 'Az CLI login'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          allow-no-subscriptions: ${{ env.AZURE_SUBSCRIPTION_ID == '' }}
      
      - name: 'Run az commands to deploy container'
        run: |
          az container create \
          --resource-group ${{ secrets.AZURE_GROUP }} \
          --name cosmic-news \
          --image ${{ secrets.DOCKERHUB_USERNAME }}/cosmic-news:v1 \
          --dns-name-label pedrocristino2020-cosmic-news \
          --registry-login-server index.docker.io \
          --registry-username ${{ secrets.DOCKERHUB_USERNAME }} \
          --registry-password ${{ secrets.DOCKERHUB_TOKEN }} \
          --ports 8443 \
          --os-type Windows \
          --cpu 2 \
          --memory 2

#Cambio en azure para arreglar el error, quitando main y poniendo "fase3" al final en el repositorio para que sirva para todas las ramas y no solo main
#Vuelta a actualizar quitando PedroCristino2020 del "repo"
#Habilitamos desde la powershell de azure el servicio